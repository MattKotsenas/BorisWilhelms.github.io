<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Azure on Boris Wilhelms // Coding Blog</title>
    <link>https://blog.wille-zone.de/tags/azure/</link>
    <description>Recent content in Azure on Boris Wilhelms // Coding Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-US</language>
    <lastBuildDate>Thu, 20 Jul 2017 17:05:31 +0200</lastBuildDate>
    
	<atom:link href="https://blog.wille-zone.de/tags/azure/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Secure Azure Functions with jwt token</title>
      <link>https://blog.wille-zone.de/post/secure-azure-functions-with-jwt-token/</link>
      <pubDate>Thu, 20 Jul 2017 17:05:31 +0200</pubDate>
      
      <guid>https://blog.wille-zone.de/post/secure-azure-functions-with-jwt-token/</guid>
      <description>Out of the box it is only possible to secure your Azure Functions via Function Keys (API-Keys), which sometimes might not fit into your requirements. When using HttpTrigger we luckily have access to the current request and are therefor able to implement our own custom authentication/authorization methods. You could for example use jwt tokens to control authentication/authorization.
Here is an example code on how to validate jwt tokens and controling access to your Azure Function.</description>
    </item>
    
    <item>
      <title>Access certificates in Azure</title>
      <link>https://blog.wille-zone.de/post/access-certificates-in-azure/</link>
      <pubDate>Wed, 03 May 2017 12:45:42 +0200</pubDate>
      
      <guid>https://blog.wille-zone.de/post/access-certificates-in-azure/</guid>
      <description>&lt;p&gt;Thanks to this &lt;a href=&#34;http://stackoverflow.com/questions/23827884/accessing-uploaded-certificates-in-azure-web-sites&#34; target=&#34;_blank&#34;&gt;Stackoverflow post&lt;/a&gt; for the tip.&lt;/p&gt;

&lt;p&gt;After uploading the certificate using the Azure Portal, you need to add an appsetting called &lt;em&gt;WEBSITE_LOAD_CERTIFICATES&lt;/em&gt;. The value of the setting is the thumbprint of the certificate. We can also pass multiple thumbprints, delimited by comma or use * to load all available certificates. After this the certificates will be loaded to the &lt;em&gt;personal&lt;/em&gt; certificate store of the &lt;em&gt;current user&lt;/em&gt;.
&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>